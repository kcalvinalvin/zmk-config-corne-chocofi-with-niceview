/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define FNC  1
#define NUM  2
#define CHAR 3
#define NAV  4

&lt {
        tapping-term-ms = <175>;
        flavor = "hold-preferred";
};

/ {
        behaviors {
                hm: homerow_mods {
                        compatible = "zmk,behavior-hold-tap";
                        label = "homerow mods";
                        #binding-cells = <2>;
                        tapping_term_ms = <150>;
                        flavor = "balanced";
                        bindings = <&kp>, <&kp>;
                };

                fb: function_button {
                        compatible = "zmk,behavior-hold-tap";
                        label = "homerow mods";
                        #binding-cells = <2>;
                        tapping_term_ms = <200>;
                        flavor = "tap-preferred";
                        bindings = <&mo>, <&kp>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "BASE";
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I            |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K            |  L  |  '  |
// |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,            |  .  |  /  |
//                    | GUI | LWR | SPC |  | ESC  | RSHIFT/SPACE  | ALT |
                        bindings = <
  &none   &hm LGUI Q   &kp W        &kp E           &kp R          &kp T        &kp Y      &kp U    &kp I       &kp O        &kp P              &none
  &none   &kp A        &kp S        &kp D           &kp F          &kp G        &kp H      &kp J    &kp K       &kp L        &fb        FNC SQT &none
  &none   &hm LSHIFT Z &kp X        &kp C           &kp V          &kp B        &kp N      &kp M    &kp COMMA   &hm RALT DOT &hm RSHIFT FSLH    &none
               &hm LGUI TAB         &mt LCTRL ESC   &lt NUM BSPC   &lt NAV BSPC &kp SPACE  &lt CHAR RET
                        >;
                };
                function_layer {
                        label = "FUNC";
// -----------------------------------------------------------------------------------------
// | BRIG+ |  V-  | mute  |  V+  | PWR  |   | F12 | F7 | F8 | F9 | trans |
// | BRIG- | Prev | Pause | Next | Stop |   | F11 | F4 | F5 | F6 | trans |
// | /Ble  | Ble0 | Ble1  | Ble2 | Ble3 |   | F10 | F1 | F2 | F3 | trans |
//                | Ble4  | LWR  | SPC  |   | ENT | -- | ALT |
                        bindings = <
  &none &kp C_BRI_UP  &kp C_VOL_DN  &kp C_MUTE        &kp C_VOL_UP  &kp C_POWER      &kp F12 &kp F7 &kp F8  &kp F9  &trans &none
  &none &kp C_BRI_DN  &kp C_PREV    &kp C_PLAY_PAUSE  &kp C_NEXT    &kp C_STOP       &kp F11 &kp F4 &kp F5  &kp F6  &trans &none
  &none &bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1      &bt BT_SEL 2  &bt BT_SEL 3     &kp F10 &kp F1 &kp F2  &kp F3  &trans &none
                      &bt BT_SEL 4    &trans   &trans         &trans    &trans &trans
                        >;
                };
                num_layer {
                        label = "NUM";
// -----------------------------------------------------------------------------------------
// | ! |  +  |  [  |  ]  |  =  |   | ^  | 7  |  8  | 9  | * |
// | @ |  _  |  (  |  )  |  -  |   | %  | 4  |  5  | 6  | ; |
// | \ |  &  |  {  |  }  |  |  |   | $  | 1  |  2  | 3  | : |
//           | --- | --- | --- |        | -- |  0  | -- |
                        bindings = <
  &none &kp EXCL  &kp PLUS  &kp LBKT  &kp RBKT &kp EQUAL      &kp CARET &kp N7 &kp N8   &kp N9 &kp KP_MULTIPLY &none
  &none &kp AT    &kp UNDER &kp LPAR  &kp RPAR &kp MINUS      &kp PRCNT &kp N4 &kp N5   &kp N6 &kp SEMI        &none
  &none &kp BSLH  &kp AMPS  &kp LBRC  &kp RBRC &kp PIPE       &kp DLLR  &kp N1 &kp N2   &kp N3 &kp COLON       &none
                       &trans    &trans   &trans              &trans    &kp N0 &trans
                        >;
                };
                char_layer {
                        label = "CHAR";
// -----------------------------------------------------------------------------------------
// | ` |  +  |  [  |  ]  |  =  |   | ^ | 7 | 8 | 9 | * |
// | # |  _  |  (  |  )  |  -  |   | % | 4 | 5 | 6 | ; |
// | ~ |  &  |  {  |  }  |  |  |   | $ | 1 | 2 | 3 | : |
//           | --- | --- | --- |   | @ | 0 | ! |
                        bindings = <
  &none &kp GRAVE &kp PLUS  &kp LBKT  &kp RBKT &kp EQUAL      &kp CARET &kp N7 &kp N8   &kp N9 &kp KP_MULTIPLY  &none
  &none &kp HASH  &kp UNDER &kp LPAR  &kp RPAR &kp MINUS      &kp PRCNT &kp N4 &kp N5   &kp N6 &kp SEMI         &none
  &none &kp TILDE &kp AMPS  &kp LBRC  &kp RBRC &kp PIPE       &kp DLLR  &kp N1 &kp N2   &kp N3 &kp COLON        &none
                       &trans    &trans   &trans              &trans    &kp N0 &trans
                        >;
                };
                nav_layer {
                        label = "NAV";
// -----------------------------------------------------------------------------------------
                        bindings = <
  &none &kp TAB    &trans    &trans    &trans   &trans         &trans   &trans   &trans    &trans    &kp BSPC &none
  &none &kp ESC    &trans    &trans    &trans   &trans         &kp LEFT &kp DOWN &kp UP    &kp RIGHT &kp RET  &none
  &none &kp LSHIFT &trans    &trans    &trans   &trans         &trans   &trans   &trans    &trans    &trans   &none
                     &kp LGUI  &kp LCTRL  &kp LALT            &trans   &trans   &trans
                        >;
                };
        };
};
